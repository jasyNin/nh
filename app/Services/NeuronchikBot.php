<?php

namespace App\Services;

class NeuronchikBot
{
    private array $dataset = [
        'programming' => [
            'keywords' => ['php', 'javascript', 'python', 'код', 'программирование', 'ошибка', 'баг', 'фреймворк', 'laravel', 'vue', 'react', 'angular', 'верстка', 'css', 'html'],
            'responses' => [
                "Проанализировав ваш вопрос, могу предложить следующее решение: {content}. Обратите внимание на документацию и лучшие практики в этой области. Если у вас возникнут дополнительные вопросы, я с радостью помогу!",
                "Как разработчик, я бы порекомендовал следующий подход: {content}. Это решение основано на современных практиках и принципах чистого кода.",
                "Интересный вопрос! На основе моего анализа, оптимальное решение будет таким: {content}. Не забудьте также проверить безопасность и производительность кода.",
            ]
        ],
        'design' => [
            'keywords' => ['дизайн', 'интерфейс', 'ui', 'ux', 'макет', 'цвет', 'типография', 'шрифт', 'логотип', 'бренд', 'стиль'],
            'responses' => [
                "С точки зрения дизайна, рекомендую обратить внимание на следующие аспекты: {content}. Это поможет создать привлекательный и удобный интерфейс.",
                "Анализируя ваш вопрос о дизайне, могу предложить такое решение: {content}. Важно помнить о принципах UX/UI при реализации.",
                "В современном дизайне это решается так: {content}. Обязательно учитывайте отзывчивость и доступность интерфейса.",
            ]
        ],
        'database' => [
            'keywords' => ['база данных', 'sql', 'mysql', 'postgresql', 'запрос', 'таблица', 'связь', 'индекс', 'миграция', 'бд'],
            'responses' => [
                "Работая с базами данных, рекомендую следующее решение: {content}. Обратите внимание на оптимизацию запросов и индексацию.",
                "Для вашей задачи с базой данных оптимальным будет такой подход: {content}. Это обеспечит хорошую производительность и масштабируемость.",
                "В контексте баз данных, лучшее решение будет таким: {content}. Не забудьте про резервное копирование и безопасность данных.",
            ]
        ],
        'security' => [
            'keywords' => ['безопасность', 'уязвимость', 'хакер', 'взлом', 'защита', 'шифрование', 'пароль', 'аутентификация', 'авторизация'],
            'responses' => [
                "С точки зрения безопасности, рекомендую следующие меры: {content}. Регулярно обновляйте зависимости и проводите аудит безопасности.",
                "Для обеспечения безопасности вашего приложения, предлагаю: {content}. Важно следить за последними уязвимостями и своевременно их устранять.",
                "Безопасность требует комплексного подхода. Вот решение: {content}. Не забывайте про мониторинг и логирование событий безопасности.",
            ]
        ],
        'performance' => [
            'keywords' => ['производительность', 'оптимизация', 'скорость', 'загрузка', 'кэширование', 'память', 'cpu', 'сервер'],
            'responses' => [
                "Для улучшения производительности рекомендую: {content}. Обязательно проведите тестирование под нагрузкой после внедрения изменений.",
                "Оптимизация производительности может быть достигнута следующим образом: {content}. Используйте инструменты профилирования для измерения результатов.",
                "Анализ производительности показывает, что лучшим решением будет: {content}. Не забудьте про мониторинг метрик после внедрения.",
            ]
        ],
        'general' => [
            'keywords' => [],
            'responses' => [
                "Проанализировав ваш вопрос, могу предложить следующее: {content}. Надеюсь, это поможет решить вашу задачу!",
                "Интересный вопрос! Вот что я думаю по этому поводу: {content}. Буду рад помочь, если возникнут дополнительные вопросы.",
                "На основе имеющихся данных, рекомендую следующее решение: {content}. Дайте знать, если нужны дополнительные пояснения.",
            ]
        ]
    ];

    private array $contextResponses = [
        'Давайте разберем это подробнее. {content}',
        'На основе контекста вашего вопроса, {content}',
        'Проанализировав ситуацию, могу сказать, что {content}',
        'Интересный вопрос! {content}',
        'С технической точки зрения, {content}',
    ];

    public function generateResponse(string $question, string $content): string
    {
        $category = $this->determineCategory($question);
        $responses = $this->dataset[$category]['responses'];
        $response = $responses[array_rand($responses)];
        
        // Генерируем контекстный ответ на основе содержания вопроса
        $contextResponse = $this->generateContextBasedResponse($content);
        
        // Комбинируем шаблонный ответ с контекстным
        return str_replace('{content}', $contextResponse, $response);
    }

    private function determineCategory(string $question): string
    {
        $question = mb_strtolower($question);
        
        foreach ($this->dataset as $category => $data) {
            if ($category === 'general') continue;
            
            foreach ($data['keywords'] as $keyword) {
                if (mb_strpos($question, $keyword) !== false) {
                    return $category;
                }
            }
        }
        
        return 'general';
    }

    private function generateContextBasedResponse(string $content): string
    {
        // Здесь можно добавить более сложную логику анализа контента
        // Сейчас просто возвращаем контент с дополнительным контекстом
        $contextTemplate = $this->contextResponses[array_rand($this->contextResponses)];
        return str_replace('{content}', $this->cleanContent($content), $contextTemplate);
    }

    private function cleanContent(string $content): string
    {
        // Очищаем контент от HTML-тегов и лишних пробелов
        $content = strip_tags($content);
        $content = preg_replace('/\s+/', ' ', $content);
        return trim($content);
    }
} 